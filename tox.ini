[tox]
envlist	= tidy,lint,servicetests,mobiletests,webtests
skipsdist	=	true
parallel=true
parallel_show_output=false

; [testenv:tidy]
; description = executa o tidy para formatar os arquivos .resource e .robot
; parallel_show_output=false
; deps =
; 	-r requirements.txt
; commands =
; 	tidy: robotidy --config .\pyproject.toml ./**/*.resource
; 	tidy: robotidy --config .\pyproject.toml ./**/*.robot

[testenv]
description = executa o tidy para formatar os arquivos .resource e .robot
parallel_show_output=false
deps =
	robotframework-robocop
  robotframework-tidy
  {servicetests,mobiletests,webtests}: -r requirements.txt
commands_pre =
  robotidy --config .\pyproject.toml ./**/*.resource
	robotidy --config .\pyproject.toml ./**/*.robot
  robocop -e missing-space-after-comment -e missing-doc-keyword -e empty-lines-between-sections --reports timestamp,all
commands =
  servicetests: robot -d .logs_service -e mobiletest -e webtest {posargs}
  mobiletests: robot -d .logs_mobile -e servicetest -e webtest {posargs}
  webtests: rfbrowser init
	webtests: robot -d .logs_web -e servicetest -e mobiletest {posargs}

; [testenv:servicetests]
; parallel=true
; parallel_show_output=true
; deps =
; 	-r requirements.txt
; commands =
; 	lint: robocop -e missing-space-after-comment -e missing-doc-keyword -e missing-doc-suite -e empty-lines-between-sections --reports timestamp,all
; 	servicetests: robot -d .logs_service -e mobiletest -e webtest {posargs}

; [testenv:mobiletests]
; parallel=true
; parallel_show_output=true
; deps =
; 	-r requirements.txt
; commands =
; 	lint: robocop --reports timestamp,all
; 	mobiletests: robot -d .logs_mobile -e servicetest -e webtest {posargs}

; [testenv:webtests]
; parallel=true
; parallel_show_output=true
; deps =
; 	-r requirements.txt
; commands =
; 	lint: robocop --reports timestamp,all
; 	webtests: rfbrowser init
; 	webtests: robot -d .logs_web -e servicetest -e mobiletest {posargs}
